<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ShopMenuSubs', 'default');

/**
 * BaseShopMenuSubs
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $shop_id
 * @property string $name
 * @property string $type
 * @property string $img
 * @property string $description
 * @property integer $related_to
 * @property integer $level
 * @property integer $has_sub
 * @property integer $is_active
 * @property integer $order
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property integer $deleted
 * @property Shops $Shops
 * @property Doctrine_Collection $ShopMenuSubs
 * @property Doctrine_Collection $ShopAboutUs
 * @property Doctrine_Collection $ShopAlbums
 * @property Doctrine_Collection $ShopBranches
 * @property Doctrine_Collection $ShopContacts
 * @property Doctrine_Collection $ShopOffers
 * @property Doctrine_Collection $ShopProducts
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseShopMenuSubs extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('shop_menu_subs');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('shop_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('name', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('type', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('img', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('related_to', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('level', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('has_sub', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('is_active', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('order', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('created_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('updated_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('deleted', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Shops', array(
             'local' => 'shop_id',
             'foreign' => 'id'));

        $this->hasMany('ShopMenuSubs', array(
             'local' => 'id',
             'foreign' => 'related_to'));

        $this->hasMany('ShopAboutUs', array(
             'local' => 'id',
             'foreign' => 'sub_id'));

        $this->hasMany('ShopAlbums', array(
             'local' => 'id',
             'foreign' => 'sub_id'));

        $this->hasMany('ShopBranches', array(
             'local' => 'id',
             'foreign' => 'menu_id'));

        $this->hasMany('ShopContacts', array(
             'local' => 'id',
             'foreign' => 'sub_id'));

        $this->hasMany('ShopOffers', array(
             'local' => 'id',
             'foreign' => 'sub_id'));

        $this->hasMany('ShopProducts', array(
             'local' => 'id',
             'foreign' => 'sub_id'));
    }
}